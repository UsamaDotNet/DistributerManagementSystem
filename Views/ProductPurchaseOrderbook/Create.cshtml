@model DistributerManagementSystemModels.ProductPurchaseOrderbook

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ProductPurchaseOrderbook</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
@*             <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <select id="ProductDropdown" asp-for="ProductName" class="form-control" asp-items="ViewBag.Products"></select>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductCategory" class="control-label"></label>
                <select id="CategoryDropdown" asp-for="ProductCategory" class="form-control"></select>
                    <option>Category</option>
                <span asp-validation-for="ProductCategory" class="text-danger"></span>
            </div> *@

            <div class="form-group">
                <label asp-for="ProductName" class="control-label">Product</label>
                <select id="ProductDropdown" asp-for="ProductName" class="form-control" asp-items="ViewBag.ProductDropdown"></select>
            </div>

            <div class="form-group">
                <label asp-for="PurchasedByVendor" class="control-label">Vendor</label>
                <select asp-for="PurchasedByVendor" class="form-control" asp-items="ViewBag.Vendor"></select>
            </div>


@*             <div class="form-group">
                <label asp-for="ProductCategory" class="control-label">Category</label>
                <select id="CategoryDropdown" asp-for="ProductCategory" class="form-control" asp-items="ViewBag.CategoryDropdown">
                    <option value="">Select a category</option>
                </select>
            </div>

            active
 *@            

@*             <div class="form-group">
                <label asp-for="UnitValue" class="control-label"></label>
                <input asp-for="UnitValue" class="form-control"></input>
                <span asp-validation-for="UnitValue" class="text-danger"></span>
            </div>

            active
 *@            
  @*           <div class="form-group">
                <label asp-for="Unit" class="control-label"></label>
                <input asp-for="Unit" class="form-control" />
                <span asp-validation-for="Unit" class="text-danger"></span>
            </div> *@

@*             <div class="form-group">
                <label asp-for="Unit" class="control-label">Unit</label>
                <select id="UnitDropdown" asp-for="Unit"  class="form-control" asp-items="ViewBag.UnitDropdown">
                    <option value="">Select a unit</option>
                </select>
            </div>

            active
 *@            
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BuyingPrice" class="control-label"></label>
                <input asp-for="BuyingPrice" class="form-control" />
                <span asp-validation-for="BuyingPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @* <script>
        $(document).ready(function () {
            $('#ProductDropdown').change(function () {
                var productId = $(this).val();

                // Example: Assuming the data for categories and units is already loaded into JavaScript arrays
                var categories = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.CategoryDropdown));
                var units = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.UnitDropdown));

                // Filter categories and units based on the selected product
                var filteredCategories = categories.filter(function (item) {
                    return item.ProductId === productId;
                });

                var filteredUnits = units.filter(function (item) {
                    return item.productId === productId;
                });

                // Populate the Category dropdown
                $('#CategoryDropdown').empty();
                $.each(filteredCategories, function (index, item) {
                    $('#CategoryDropdown').append($('<option>', {
                        value: item.Id,
                        text: item.CategoryName
                    }));
                });

                // Populate the Unit dropdown
                $('#UnitDropdown').empty();
                $.each(filteredUnits, function (index, item) {
                    $('#UnitDropdown').append($('<option>', {
                        value: item.Id,
                        text: item.UnitName
                    }));
                });
            });
        });
    </script>
 *@

}

