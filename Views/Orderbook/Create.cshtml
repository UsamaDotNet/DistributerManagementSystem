@model DistributerManagementSystemModels.Orderbook

@{
    ViewData["Title"] = "Create";

}
@if (ViewBag.CustomMessage != null)
{
    <div class="alert alert-info">
        @ViewBag.CustomMessage
    </div>
}
<h1>VazirX Distribuers</h1>

<h4>Create Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RetailerName" class="control-label"></label>
                <select asp-for="RetailerName" class="form-control" asp-items="ViewBag.Retailer"></select>
                <span asp-validation-for="RetailerName" class="text-danger"></span>
            </div>

            @* retailer name and product should be in the dropdown *@

@*             <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <select asp-for="ProductName" class="form-control" asp-items="ViewBag.ProductName"></select>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
 *@
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <select asp-for="ProductName" id="ProductDropdown" class="form-control" asp-items="ViewBag.ProductName"></select>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" id="QuantityInput" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TotalAmount" class="control-label"></label>
                <input asp-for="TotalAmount" id="TotalAmountInput" class="form-control" readonly />
                <span asp-validation-for="TotalAmount" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AmountPaid" class="control-label"></label>
                <input asp-for="AmountPaid" class="form-control" />
                <span asp-validation-for="AmountPaid" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPaid" /> @Html.DisplayNameFor(model => model.IsPaid)
                </label>
            </div>
            
            <div class="form-group">
                <input type="submit" name="AddMore" value="AddMore" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <input type="submit" name="AddMore" value="ReviewOrder" class="btn btn-primary" />
            </div>


        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{
        var rateList = ViewBag.Rate as IEnumerable<SelectListItem>;
        var productPrices = rateList?.ToDictionary(item => item.Value, item => item.Text);
    }

    <script>
        $(document).ready(function () {
            // Create a dictionary to store product prices
            var productPrices = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(productPrices));

            // Function to calculate the total amount
            function calculateTotal() {
                var productId = $('#ProductDropdown').val();
                var quantity = $('#QuantityInput').val();
                var price = productPrices[productId];

                if (productId && quantity) {
                    var totalAmount = price * quantity;
                    $('#TotalAmountInput').val(totalAmount.toFixed(2)); // Display total with 2 decimal places
                }
            }

            // Attach event handlers
            $('#ProductDropdown, #QuantityInput').change(function () {
                calculateTotal();
            });
        });
    </script>
}
